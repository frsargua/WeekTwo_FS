:root {
  /* Background */
  --background-primary: black;
  --background-secondary: rgba(255, 255, 255, 0.87);
  /* Fonts */
  --font-primary-color: rgba(0, 0, 0, 0.87);
  --font-secondary-color: rgba(255, 255, 255, 0.87);
  /* Nav-bar */
  --nav-bar-list-border: rgba(128, 128, 128, 0.418);
  /* Styling */
  --border-radius: 5px;
  --box-shadow-color: #f3f3f3;
  /* Transition */
  --scale-factor: 1.05;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  overflow-x: hidden;
}

body {
  color: var(--font-primary-color);
  font-family: Inter, Arial, Helvetica, sans-serif;
  overflow-x: hidden;
  /* background-color: var(--background-primary); */
  transition: all 650ms ease-in-out;
}

h2 {
  font-size: 4rem;
}

.block {
  padding: 5rem 2rem;
}

/* Makes containers take no more than 1140px and center in the middle using margin*/
.container {
  max-width: 1140px;
  margin: 0 auto;
}

.section-header {
  text-align: center;
  margin-bottom: 3rem;
}

/* <------------------------------Header-------------------------------> */
/* <--------------------------NavBar---------------------------> */
header {
  background-color: var(--background-primary);
  opacity: 0.95;
  padding: 0 1rem;
  position: fixed;
  width: 100%;
  z-index: 99;
  height: 55px;
}

/* This makes the navlogo and the a tag links be push to separate ends in a row (for desktop)*/
.navbar-container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

/* This makes the checkbox block disappear allowing the navlogo to be the only clickable box*/
.navbar-container .nav-toggler {
  display: none;
}

.navbar-container .nav-logo {
  width: auto;
  height: 50px;
}

/* Background color needed for navbar-links:hover */
/* Max height of 0 allows makes the navbar non visible when the check box is not clicked */
.navbar-container .navbar {
  background-color: var(--background-primary);
  max-height: 100%;
  transition: all 0s ease;
  padding: 0;
}

/* Desktop - makes links be in a row */
.navbar ul {
  display: flex;
  flex-direction: row;
  margin: 0;
}

/* Keeps a links separated, so they do not stick side by side */
.navbar > ul > li {
  padding: 0.9rem 2rem;
  list-style: none;
}

/* Removes a tag decoration  */
/* Makes text stand out by using a white font color */
/* Makes all text uppercase for readability */
/* Desktop - Opacity makes the text visible*/
/* Transition affects opacity */
.navbar ul li .navbar-links {
  text-decoration: none;
  color: var(--font-secondary-color);
  text-transform: uppercase;
  opacity: 1;
  transition: opacity 150ms ease-in-out;
}

/* Hovering on links makes them darker, so the user can tell which option is being clicked */
.navbar ul li .navbar-links:hover {
  opacity: 0.7;
}

@media screen and (max-width: 768px) {
  /* Makes logo and container with nav-links arrange in a column */
  .navbar-container {
    flex-direction: column;
    align-items: center;
  }

  .navbar-container .navbar {
    max-height: 0px;
  }

  /* Makes nav-bar li be in a column wit the text to the left */
  .navbar ul {
    flex-direction: column;
    text-align: left;
    height: 0;
    overflow: hidden;
  }

  /* Adding padding to the li */
  /* Makes li take 100 % of the VW, since they are are in a flex display container */
  .navbar > ul > li {
    padding: 1rem 2rem;
    width: 100vw;
  }

  /* Opacity of 0 when the image is unclicked */
  .navbar ul li .navbar-links {
    opacity: 0;
  }

  /* Adding expandible button */
  /* Makes max-heigh 100% so the nav-bar appears when the checkbox is clicked */
  .nav-toggler:checked ~ .navbar {
    max-height: 100%;
    transition: all 2s ease;
  }

  .nav-toggler:checked ~ .navbar ul {
    height: auto;
  }

  /* Adds border underneath each li element */
  .nav-toggler:checked ~ .navbar ul li {
    border-top: 1px solid var(--nav-bar-list-border);
    transition: border 200ms ease-out;
  }

  /* Phone - Makes the opacity of the a tag .navbar-links equals to 1 so they are visible 
    only when the checkbox is clicked */
  .nav-toggler:checked ~ .navbar ul li .navbar-links {
    opacity: 1;
    transition: opacity 250ms ease-in 250ms;
  }
}

/* <------------------------------Main-------------------------------> */
/* <--------------------------Hero---------------------------> */

.hero {
  mask-image: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 1) 90%,
    transparent 100%
  );
  overflow: hidden;
  position: relative;
  width: 100%;
}

/* Makes div as the background image container and positions itself as absolute relative to the hero section */
/* I had problems with the blur filter, hence i used this "HACK" */
.hero .background {
  background-image: url("../Images/garduation-photo.jpg");
  background-position: bottom 50% center;
  background-size: cover;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  z-index: -1;
}

.hero .hero-box-container {
  color: var(--font-secondary-color);
  /* Aligns hero-box's in a column */
  display: flex;
  flex-direction: column;
  /* Makes the text transparent and 20X bigger. */
  opacity: 0.01;
  transform: scale(20);
  /* The transition affects all effects and takes place in 6s */
  transition: all 0.6s;
  /* Prevents the transition from getting triggered outside the hero Section */
  pointer-events: none;
}

.hero-box-container .hero-box {
  margin: 1.5rem;
  /* Prevents the text from wrapping on a new line, so the phrases stay in one line */
  white-space: nowrap;
  width: 100%;
}

/* SMALL */
/* Small letters containing box */
.hero-box-small {
  margin-bottom: 3rem;
}

/* This makes the text size responsive to the viewport */
.hero-box-small h1 {
  font-size: 2vw;
}

/* MEDIUM */
.hero-box-medium h3 {
  font-size: 2vw;
}

/* LARGE */
.hero-box-large h2 {
  font-size: 6vw;
}
/* Positions text to the left */
.hero-box-left {
  text-align: left;
}

/* Positions text to the right */
.hero-box-right {
  text-align: right;
}

/* Transitions and effects */
/* BLurs the background when hovering on the section */
.hero:hover .background {
  filter: blur(2px) brightness(0.9);
}

/* Makes text visible and smaller to a scale of 1 ( original size) when hovering on the hero section */
.hero:hover .hero-box-container {
  opacity: 1;
  transform: scale(1);
}

@media screen and (max-width: 768px) {
  /* Reducing margin in mobile screen */
  .hero-box-container .hero-box {
    margin: 0.3rem;
  }
  /* Making all font sizes bigger for smartphones */
  .hero-box-small h1 {
    font-size: 4vw;
  }

  .hero-box-medium h3 {
    font-size: 3vw;
  }
  .hero-box-large h2 {
    font-size: 8vw;
  }
}

/* Button */
.button-container {
  width: fit-content;
  margin: auto;
  margin-top: 3rem;
}
/* Styling for the action button */
.action-button {
  text-decoration: none;
  padding: 0.5rem 2rem;
  border: 1px solid var(--background-secondary);
  border-radius: 25px;
  background-color: rgba(0, 0, 0, 0.5);
  color: var(--font-secondary-color);
}
/* Increases the size of the button upon hovering over it */
.button-container:hover {
  transform: scale(var(--scale-factor));
}

/* Add background color to button when hovering over it to give better contrast */
.button-container:hover > .action-button {
  background-color: rgba(255, 217, 0, 0.3);
}

/* <--------------------------Porfolio Section---------------------------> */

.parent-container {
  position: relative;
  text-align: center;
}
.header-decoration {
  background-color: white;
  width: fit-content;
  margin: auto;
}

.header-decoration::before {
  content: "";
  position: absolute;
  top: 50%;
  left: -50vw;
  width: 2000px;
  border-bottom: calc(0.2px + 0.08em) solid var(--background-primary);
  z-index: -1;
}
.header-decoration::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2000px;
  border-bottom: calc(0.2px + 0.08em) solid var(--background-primary);
  z-index: -1;
}

.porfolio {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.porfolio-box {
  flex: 0 0 50%;
  padding: 1rem;
}

.porfolio-box figure {
  border: 3px solid var(--font-primary-color);
  position: relative;
  border-radius: 10px;
  overflow: hidden;
  cursor: pointer;
  height: 33vh;
}

.porfolio-box figure a img {
  width: 100%;
}

.porfolio-box figure .porfolio-description {
  background-color: rgba(0, 0, 0, 0.853);
  width: 100%;
  padding: 0.5rem;
  position: absolute;
  bottom: 0;
  color: var(--font-secondary-color);
}

/* .porfolio-box figure .porfolio-description h3 {
} */

/* .porfolio-description h3 { */
/* padding-bottom: 1rem; */
/* } */

.porfolio-box figure:hover .porfolio-description h3 {
  margin-bottom: 0.5rem;
}
.porfolio-box figure .porfolio-description p {
  /* display: none; */
  height: 0;
  overflow-x: hidden;
  transition: all 400ms ease-in;
}

.porfolio-box:hover figure {
  box-shadow: 0 0 10px 7px #c0c0c0bc;
}

.porfolio-box figure:hover .porfolio-description p {
  /* display: block; */
  height: auto;
  transition: all 400ms ease-in;
}

.porfolio-box:hover {
  transform: scale(var(--scale-factor));
}

.larger-box {
  flex-basis: 100%;
}

@media screen and (max-width: 992px) {
  .porfolio-box {
    flex: 0 0 50%;
  }
}

@media screen and (max-width: 768px) {
  /* .porfolio {
    width: 100%;
  } */
  .porfolio-box figure {
    height: 40vh;
  }
  .porfolio-box {
    flex: 1 0 100%;
    padding: 1.5rem 0;
  }
}

/* <--------------------------About Me---------------------------> */
.about-me {
  display: flex;
  flex-direction: column;
  margin: auto;
  /* box-shadow: 0 0 20px 10px var(--box-shadow-color); */
  border-radius: 10px;
  padding: 2rem;
}
/* Makes box larger when hovered */
.about-me:hover {
  transform: scale(1.005);
}

/* Makes containers be spaced to each end in a row. */
.about-me-Container {
  display: --webkit-flexbox; /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box; /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox; /* TWEENER - IE 10 */
  display: -webkit-flex;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  /* Aligns boxes in the center in the vertical axis */
  align-items: center;
  width: 100%;
  padding-bottom: 2rem;
}

/* Makes image take 25% of the width of the parent container */
.about-me-Container .about-me-photo {
  flex: 0 0 35%;
  border-radius: 50%;
  box-shadow: 0 0 5px 1px var(--box-shadow-color);
  overflow: hidden;
}

.about-me-Container .about-me-photo img {
  width: 100%;
}

.about-me-Container > .text {
  flex: 0 0 60%;
  width: 100%;
}

/* Technologies */
.about-me-technologies > h3 {
  text-align: center;
  padding-bottom: 1.5rem;
}
.logo-group {
  width: 100vw;
  /* left: 0; */
  display: flex;
  max-height: 100px;
  flex-direction: row;
  justify-content: space-evenly;
}

.logo-group .logo-container {
  flex: 0 0 5%;
  border-radius: 50%;
  overflow: hidden;
  margin-left: 1rem;
  animation: icon-group 5s infinite;
}

@keyframes icon-group {
  0% {
  }
  100% {
  }
}
.logo-container:hover {
  transform: scale(var(--scale-factor));
}
.logo-group .logo-container .logo-img {
  max-width: 100%;
  max-height: 100%;
  object-fit: cover;
}

/* External links  */
.external-links-icons-group {
  margin: auto;
  width: fit-content;
  padding-top: 3rem;
}

.external-links-icons-group > a {
  padding: 0 1rem;
  color: black;
  font-size: 1.5rem;
}

@media screen and (max-width: 768px) {
  .about-me {
    width: 100%;
  }
  /* Changed the display flex to display block since flex basics did not work properly */
  .about-me-Container {
    display: block;
  }

  .about-me-Container .about-me-photo {
    margin: auto;
    width: 50%;
    margin-bottom: 2rem;
  }
  .about-me-Container > .text {
    text-align: justify;
    text-justify: inter-word;
  }

  .logo-group {
    justify-content: space-around;
  }
  .logo-group .logo-container {
    flex: 0 0 20%;
  }
}

/* <--------------------------Action---------------------------> */
/* Separate the action-section from the about-me section */
.contact-me {
  padding-top: 3rem;
}

.contact-me .contact-me-action {
  background-color: var(--background-primary);
  height: 5vh;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  width: 100%;
  padding: 0 2rem;
}

.contact-me .contact-me-action a {
  font-size: 1.7rem;
  color: var(--font-secondary-color);
}

.form {
  height: 70vh;
}

.form-container {
  background-color: var(--background-primary);
  display: none;
  flex-direction: column;
  text-align: center;
  padding-bottom: 2rem;
}

.form-container > a {
  color: var(--font-secondary-color);
  text-decoration: none;
  padding: 0.5rem;
  font-weight: bold;
}

/* I have reused the action-button class and added some changes using another class */
.contact-me .contact-me-action .contact-me-action-button {
  color: var(--font-primary-color);
  background-color: var(--background-secondary);
  font-weight: bold;
}

.contact-me-action > button:hover {
  transform: scale(var(--scale-factor));
}

@media screen and (max-width: 768px) {
  .contact-me .contact-me-action {
    flex-direction: row;
    justify-content: space-evenly;
    height: fit-content;
    padding: 1rem;
    text-align: center;
  }
}

.custom-card {
  box-shadow: 10px 15px 0 0 var(--background-secondary);
  transition: all 700ms ease-in-out;
}

.custom-card:hover {
  box-shadow: 5px 5px 0 0 var(--background-secondary);
}

.custom-card,
.custom-tags {
  width: fit-content;
  padding: 0rem 0.5rem;
  margin: 0.1rem 5px;
  border: 2px solid black;
}

.card-description {
  height: 200px;
  overflow-y: scroll;
  overflow-x: hidden;
}
.custom-height-800 {
  max-height: 450px;
  max-width: 1150px;
  position: relative;
}

.custom-img-width {
  max-width: 99%;
  max-height: 450px;
  margin: auto;
}

.height-100vh {
  height: 100vh;
}

.click-me-icon {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2;
  background-color: rgb(242, 234, 250);
  font-size: 1rem;
  padding: 0.7rem;
  border-bottom-left-radius: 10px;
  animation: color-change 5s infinite;
  pointer-events: none;
}

@keyframes color-change {
  0% {
    color: #ed4264;
  }

  20% {
    color: purple;
  }
  40% {
    color: blue;
  }
  60% {
    color: #ffc371;
  }
  80% {
    color: #ffa571;
  }
  100% {
    color: #ed4264;
  }
}

.closing-icon-description-card {
  background-color: rgb(255, 255, 255);
  border: 2px solid black;
  padding: 0 0.6rem;
  border-radius: 25px;
  position: absolute;
  top: -25px;
  right: -15px;
  font-size: 3rem;
}
.closing-icon-description-card:hover {
  color: rgb(255, 80, 67);
  transform: scale(var(--scale-factor));
}

.pop-up-card {
  position: fixed;
  top: 0;
  bottom: 0;
  height: 0;
  left: 0;
  right: 0;
  z-index: 3;
  overflow: hidden;
  background-color: rgba(67, 67, 67, 0.779);
}

footer {
  position: fixed;
  opacity: 0.9;
  bottom: 0%;
  width: 100%;
  z-index: 900;
}
@media screen and (max-width: 1150px) {
  .card-description {
    height: 100px;
  }
}

@media screen and (max-width: 975px) {
  .card-description {
    /* height: fit-content; */
  }
  .custom-height-800 {
    max-height: fit-content;
  }
  .pop-up-card {
    top: 0;
    bottom: 0;
    left: 0%;
    z-index: 999;
    right: 0%;
    width: 100%;
    /* background-color: transparent; */
  }

  .custom-img-width {
    width: 95%;
  }
}

@media screen and (max-width: 576px) {
}
